services:
  pylint:
    build:
      context: .
      dockerfile: Dockerfile.test
    image: samq-test-image
    command: bash -c "python -m pylint src"
    container_name: samq-pylint-container
    env_file:
      - compose.env

  flake8:
    build:
      context: .
      dockerfile: Dockerfile.test
    image: samq-test-image
    command: bash -c "python -m flake8 src"
    container_name: samq-flake8-container
    env_file:
      - compose.env

  pytest:
    build:
      context: .
      dockerfile: Dockerfile.test
    image: samq-test-image
    command: bash -c "cd src && python -m pytest"
    container_name: samq-pytest-container
    env_file:
      - compose.env    

  database:
    image: postgres:15
    restart: always
    container_name: samq-database-container
    env_file: compose.env
    volumes:
       - postgres:/var/lib/postgresql/data
    ports:
      - ${EXPOSED_DATABASE_PORT}:5432

  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: samq-image
    container_name: samq-api-container
    ports:
      - 8000:8000
    env_file:
      - compose.env
    command: bash -c "
      uvicorn api.main:app --port 8000 --host 0.0.0.0"
    depends_on:
      - database

  async-consume-batch:
    build:
      context: .
      dockerfile: Dockerfile
    image: samq-image
    container_name: samq-async-consume-batch-container
    env_file:
      - compose.env
    command: bash -c "
      python main.py async-consume-batch sample-worker-always-success"

  async-consume-single:
    build:
      context: .
      dockerfile: Dockerfile
    image: samq-image
    container_name: samq-async-consume-single-container
    env_file:
      - compose.env
    command: bash -c "
      python main.py async-consume-single sample-worker-always-success"      

  insert-records-from-excel:
    build:
      context: .
      dockerfile: Dockerfile
    image: samq-image
    container_name: samq-insert-records-from-excel-container
    env_file:
      - compose.env
    command: bash -c "
      python main.py insert-records-from-excel --path '../resources/sample.xlsx'"  

  insert-records-from-excel-100-items:
    build:
      context: .
      dockerfile: Dockerfile
    image: samq-image
    container_name: samq-insert-records-from-excel-100-items-container
    env_file:
      - compose.env
    command: bash -c "
      python main.py insert-records-from-excel --path '../resources/sample-100-items.xlsx'"  


volumes:
  postgres: